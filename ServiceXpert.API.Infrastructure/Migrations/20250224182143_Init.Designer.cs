// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceXpert.API.Infrastructure.DbContexts;

#nullable disable

namespace ServiceXpert.API.Infrastructure.Migrations
{
    [DbContext(typeof(SXPDbContext))]
    [Migration("20250224182143_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiceXpert.API.Domain.Entities.Issue", b =>
                {
                    b.Property<int>("IssueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IssueID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(4096)");

                    b.Property<int>("IssueStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.HasKey("IssueID");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IssueID"));

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("ServiceXpert.API.Domain.Entities.IssueStatus", b =>
                {
                    b.Property<int>("IssueStatusID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(1024)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(64)");

                    b.HasKey("IssueStatusID");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("IssueStatusID"));

                    b.ToTable("IssueStatus");

                    b.HasData(
                        new
                        {
                            IssueStatusID = 1,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "New"
                        },
                        new
                        {
                            IssueStatusID = 2,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "For Analysis"
                        },
                        new
                        {
                            IssueStatusID = 3,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "In Progress"
                        },
                        new
                        {
                            IssueStatusID = 4,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Resolved"
                        },
                        new
                        {
                            IssueStatusID = 5,
                            CreateDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifyDate = new DateTime(2025, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("ServiceXpert.API.Domain.Entities.Issue", b =>
                {
                    b.HasOne("ServiceXpert.API.Domain.Entities.IssueStatus", "IssueStatus")
                        .WithOne()
                        .HasForeignKey("ServiceXpert.API.Domain.Entities.Issue", "IssueStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IssueStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
